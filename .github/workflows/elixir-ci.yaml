name: Elixir CI

on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.9.1-slim

    services:
      postgres:
        image: postgres:12.1
        env:
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Install Dependencies
      run: |
        echo "::set-env name=MIX_ENV::test"
        echo "::set-env name=DB_HOST::postgres"
        mix local.rebar --force
        mix local.hex --force
        mix deps.get --only test
    - name: Migrate Database
      run: |
        mix ecto.create
        mix ecto.migrate
    - name: Run Tests
      env:
        DB_HOST: postgres
      run: mix test
    - uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        status: ${{ job.status }}

  deploy:
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build and push the Docker image
      run: |
        docker login --username hellodhlyn --password ${{ secrets.DOCKER_ACCESS_TOKEN }}
        docker build -t hellodhlyn/luppiter-auth:${GITHUB_REF##*/} .
        docker push hellodhlyn/luppiter-auth:${GITHUB_REF##*/}
